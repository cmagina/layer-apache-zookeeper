#!/usr/bin/python3

import unittest
import amulet
import re


class TestDeploy(unittest.TestCase):
    """
    Deployment test for Apache Zookkepper quorum
    """

    @classmethod
    def setUpClass(cls):
        cls.d = amulet.Deployment(series='xenial')

        cls.d.add('zookeeper', 'apache-zookeeper', units=3)

        cls.d.setup(timeout=900)
        cls.d.sentry.wait(timeout=1800)
        cls.unit = cls.d.sentry['zookeeper'][0]

    def test_deploy(self):
        output, retcode = self.unit.run("pgrep -a java")
        assert 'QuorumPeerMain' in output, "zookeeper QuorumPeerMain daemon is not started"

    def test_bind_port(self):
        """
        Test to verify that we update client port bindings successfully.

        """
        self.d.configure('zookeeper', {'network_interface': 'eth0'})

        try:
            self.d.sentry.wait_for_messages({'zookeeper': 'Server config changed: restarting Zookeeper'}, timeout=60)
            self.d.sentry.wait_for_messages({'zookeeper': 'Ready (3 zk units)'}, timeout=900)
        except amulet.TimeoutError:
            self.d.log("Got a timeout, but trying to next part of test_bind_port regardless.")
        ret = self.unit.run(
            'grep clientPortAddress /etc/zookeeper/conf/zoo.cfg')[0]
        matcher = re.compile(
            "^clientPortAddress=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}.*")

        self.assertTrue(matcher.match(ret))


if __name__ == '__main__':
    unittest.main()
